{"version":3,"sources":["webpack:///webpack/bootstrap d7bdfc232edc2d1117c4","webpack:///index.js","webpack:///channel.js","webpack:///./~/yaku/lib/yaku.js","webpack:///field-locale.js","webpack:///signal.js","webpack:///window.js","webpack:///entry.js","webpack:///field.js","webpack:///space.js"],"names":[],"mappings":"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A;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,qBAAoB,SAAS;AAC7B;AACA,qBAAoB,KAAK;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,oCAAmC;AACnC,iBAAgB,IAAI;AACpB;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,IAAI;AACpB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAgB,SAAS;AACzB,iBAAgB,KAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B,SAAQ;AACR;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,SAAS;AACzB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B;AAC/B,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,4BAA4B;AACvE,SAAQ;AACR;AACA,gCAA+B;AAC/B,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,IAAI;AACnB,gBAAe,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,gBAAgB;;AAEvC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,SAAS;AACzB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,QAAQ;AACxB,iBAAgB,SAAS;AACzB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,IAAI;AACpB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,gBAAe,KAAK;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAsC,6BAA6B;AACnE;AACA;AACA;AACA,MAAK;;AAEL,4BAA2B,yBAAyB;;AAEpD;AACA;AACA;AACA,iBAAgB;AAChB;AACA,+BAA8B,wBAAwB;;AAEtD;AACA;AACA;AACA;AACA,iBAAgB,KAAK;AACrB,iBAAgB,QAAQ;AACxB,iBAAgB,SAAS;AACzB;AACA,wCAAuC;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA;AACA;AACA,gBAAe,KAAK;AACpB,gBAAe,KAAK;AACpB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,8BAA6B,sCAAsC;;AAEnE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,KAAK;AACrB,iBAAgB,QAAQ;AACxB,iBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,gBAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AA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","file":"cf-widget-api.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d7bdfc232edc2d1117c4\n **/","import Channel from './channel'\n\nimport FieldLocale from './field-locale'\nimport createWindow from './window'\nimport createEntry from './entry'\nimport createSpace from './space'\n\nwindow.contentfulWidget = setup()\nexport default window.contentfulWidget\n\nfunction setup () {\n  let readyCallbacks = []\n  let widget = null\n\n  window.addEventListener('message', initializer)\n\n  return {init}\n\n  function initializer (event) {\n    let method = event.data.method\n    let params = event.data.params\n\n    if (method !== 'connect') {\n      return\n    }\n\n    widget = createWidgetAPI(params)\n    window.removeEventListener('message', initializer)\n\n    readyCallbacks.forEach((cb) => cb(widget))\n  }\n\n  function init (cb) {\n    if (widget) {\n      cb(widget)\n    } else {\n      readyCallbacks.push(cb)\n    }\n  }\n}\n\n\nfunction createWidgetAPI ({id, entry, locales, field, fieldInfo}) {\n  let channel = new Channel(id)\n\n  return {\n    locales,\n    field: new FieldLocale(channel, field),\n    entry: createEntry(channel, entry, fieldInfo, locales.default),\n    space: createSpace(channel),\n    window: createWindow(channel)\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** index.js\n **/","import Promise from 'yaku'\n\nexport default class Channel {\n\n  constructor (sourceId) {\n    this.sourceId = sourceId\n    this.messageID = 0\n    this.messageHandlers = {}\n    this.responseHandlers = {}\n\n    window.addEventListener('message', (event) => {\n      this._handleMessage(event.data)\n    })\n  }\n\n  call (method, ...params) {\n    var messageID = this._send(method, params)\n    return new Promise((resolve, reject) => {\n      this.responseHandlers[messageID] = {resolve, reject}\n    })\n  }\n\n  send (method, ...params) {\n    this._send(method, params)\n  }\n\n  addHandler (method, handler) {\n    if (!(method in this.messageHandlers)) {\n      this.messageHandlers[method] = []\n    }\n    this.messageHandlers[method].push(handler)\n  }\n\n  _handleMessage (message) {\n    if (message.method) {\n      // console.log('received message', message)\n      let {method, params} = message\n      let handlers = this.messageHandlers[method] || []\n      handlers.forEach((handler) => {\n        handler(...params)\n      })\n    } else {\n      let {id, result, error} = message\n      let handler = this.responseHandlers[id]\n\n      if (!handler) {\n        return\n      }\n\n      if (result) {\n        handler.resolve(result)\n      } else if (error) {\n        handler.reject(error)\n      }\n\n      delete this.responseHandlers[id]\n    }\n  }\n\n  _send (method, params) {\n    var messageID = this.messageID++\n\n    window.parent.postMessage({\n      source: this.sourceId,\n      id: messageID,\n      method,\n      params\n    }, '*')\n\n    return messageID\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** channel.js\n **/","/*\n Yaku v0.11.4\n (c) 2015 Yad Smood. http://ysmood.org\n License MIT\n*/\n(function () {\n    \"use strict\";\n\n    var $nil\n    , root = typeof global === \"object\" ? global : window\n    , isLongStackTrace = false\n\n    , $rejected = 0\n    , $resolved = 1\n    , $pending = 2\n\n    , $promiseTrace = \"_pt\"\n    , $settlerTrace = \"_st\"\n\n    , $fromPrevious = \"From previous event:\"\n    , $unhandledRejection = \"unhandledRejection\";\n\n    /**\n     * This class follows the [Promises/A+](https://promisesaplus.com) and\n     * [ES6](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-promise-objects) spec\n     * with some extra helpers.\n     * @param  {Function} executor Function object with three arguments resolve, reject and\n     * the promise itself.\n     * The first argument fulfills the promise, the second argument rejects it.\n     * We can call these functions, once our operation is completed.\n     * The `this` context of the executor is the promise itself, it can be used to add custom handlers,\n     * such as `abort` or `progress` helpers.\n     * @example\n     * Here's an abort example.\n     * ```js\n     * var Promise = require('yaku');\n     * var p = new Promise((resolve, reject) => {\n     *     var tmr = setTimeout(resolve, 3000);\n     *     this.abort = (reason) => {\n     *         clearTimeout(tmr);\n     *         reject(reason);\n     *     };\n     * });\n     *\n     * p.abort(new Error('abort'));\n     * ```\n     * @example\n     * Here's a progress example.\n     * ```js\n     * var Promise = require('yaku');\n     * var p = new Promise((resolve, reject) => {\n     *     var self = this;\n     *     var count = 0;\n     *     var all = 100;\n     *     var tmr = setInterval(() => {\n     *         try {\n     *             self.progress && self.progress(count, all);\n     *         } catch (err) {\n     *             reject(err);\n     *         }\n     *\n     *         if (count < all)\n     *             count++;\n     *         else {\n     *             resolve();\n     *             clearInterval(tmr);\n     *         }\n     *     }, 1000);\n     * });\n     *\n     * p.progress = (curr, all) => {\n     *     console.log(curr, '/', all);\n     * };\n     * ```\n     */\n    var Yaku = module.exports = function Promise (executor) {\n        var self = this,\n            err;\n\n        if (isLongStackTrace) self[$promiseTrace] = genTraceInfo();\n\n        if (executor !== $noop) {\n            err = genTryCatcher(executor, self)(\n                genSettler(self, $resolved),\n                genSettler(self, $rejected)\n            );\n\n            if (err === $tryErr)\n                settlePromise(self, $rejected, err.e);\n        }\n    };\n\n    extendPrototype(Yaku, {\n        /**\n         * Appends fulfillment and rejection handlers to the promise,\n         * and returns a new promise resolving to the return value of the called handler.\n         * @param  {Function} onFulfilled Optional. Called when the Promise is resolved.\n         * @param  {Function} onRejected  Optional. Called when the Promise is rejected.\n         * @return {Yaku} It will return a new Yaku which will resolve or reject after\n         * @example\n         * the current Promise.\n         * ```js\n         * var Promise = require('yaku');\n         * var p = Promise.resolve(10);\n         *\n         * p.then((v) => {\n         *     console.log(v);\n         * });\n         * ```\n         */\n        then: function then (onFulfilled, onRejected) {\n            return addHandler(this, newEmptyYaku(), onFulfilled, onRejected);\n        },\n\n        /**\n         * The `catch()` method returns a Promise and deals with rejected cases only.\n         * It behaves the same as calling `Promise.prototype.then(undefined, onRejected)`.\n         * @param  {Function} onRejected A Function called when the Promise is rejected.\n         * This function has one argument, the rejection reason.\n         * @return {Yaku} A Promise that deals with rejected cases only.\n         * @example\n         * ```js\n         * var Promise = require('yaku');\n         * var p = Promise.reject(new Error(\"ERR\"));\n         *\n         * p['catch']((v) => {\n         *     console.log(v);\n         * });\n         * ```\n         */\n        \"catch\": function (onRejected) {\n            return this.then($nil, onRejected);\n        },\n\n        // Default state\n        _state: $pending,\n\n        // The number of current promises that attach to this Yaku instance.\n        _pCount: 0,\n\n        // The parent Yaku.\n        _pre: null,\n\n        // A unique type flag, it helps different versions of Yaku know each other.\n        _Yaku: 1\n    });\n\n    /**\n     * The `Promise.resolve(value)` method returns a Promise object that is resolved with the given value.\n     * If the value is a thenable (i.e. has a then method), the returned promise will \"follow\" that thenable,\n     * adopting its eventual state; otherwise the returned promise will be fulfilled with the value.\n     * @param  {Any} value Argument to be resolved by this Promise.\n     * Can also be a Promise or a thenable to resolve.\n     * @return {Yaku}\n     * @example\n     * ```js\n     * var Promise = require('yaku');\n     * var p = Promise.resolve(10);\n     * ```\n     */\n    Yaku.resolve = function resolve (val) {\n        return isYaku(val) ? val : settleWithX(newEmptyYaku(), val);\n    };\n\n    /**\n     * The `Promise.reject(reason)` method returns a Promise object that is rejected with the given reason.\n     * @param  {Any} reason Reason why this Promise rejected.\n     * @return {Yaku}\n     * @example\n     * ```js\n     * var Promise = require('yaku');\n     * var p = Promise.reject(new Error(\"ERR\"));\n     * ```\n     */\n    Yaku.reject = function reject (reason) {\n        return settlePromise(newEmptyYaku(), $rejected, reason);\n    };\n\n    /**\n     * The `Promise.race(iterable)` method returns a promise that resolves or rejects\n     * as soon as one of the promises in the iterable resolves or rejects,\n     * with the value or reason from that promise.\n     * @param  {iterable} iterable An iterable object, such as an Array.\n     * @return {Yaku} The race function returns a Promise that is settled\n     * the same way as the first passed promise to settle.\n     * It resolves or rejects, whichever happens first.\n     * @example\n     * ```js\n     * var Promise = require('yaku');\n     * Promise.race([\n     *     123,\n     *     Promise.resolve(0)\n     * ])\n     * .then((value) => {\n     *     console.log(value); // => 123\n     * });\n     * ```\n     */\n    Yaku.race = function race (iterable) {\n        var iter, len, i = 0;\n\n        var p = newEmptyYaku(), item;\n\n        if (iterable instanceof Array) {\n            len = iterable.length;\n            while (i < len) {\n                settleWithX(p, iterable[i++]);\n                if (p._state !== $pending) break;\n            }\n        } else {\n            iter = genIterator(iterable);\n            while (!(item = iter.next()).done) {\n                settleWithX(p, item.value);\n                if (p._state !== $pending) break;\n            }\n        }\n\n        return p;\n    };\n\n    /**\n     * The `Promise.all(iterable)` method returns a promise that resolves when\n     * all of the promises in the iterable argument have resolved.\n     *\n     * The result is passed as an array of values from all the promises.\n     * If something passed in the iterable array is not a promise,\n     * it's converted to one by Promise.resolve. If any of the passed in promises rejects,\n     * the all Promise immediately rejects with the value of the promise that rejected,\n     * discarding all the other promises whether or not they have resolved.\n     * @param  {iterable} iterable An iterable object, such as an Array.\n     * @return {Yaku}\n     * @example\n     * ```js\n     * var Promise = require('yaku');\n     * Promise.all([\n     *     123,\n     *     Promise.resolve(0)\n     * ])\n     * .then((values) => {\n     *     console.log(values); // => [123, 0]\n     * });\n     * ```\n     * @example\n     * Use with iterable.\n     * ```js\n     * var Promise = require('yaku');\n     * Promise.all((function * () {\n     *     yield 10;\n     *     yield new Promise(function (r) { setTimeout(r, 1000, \"OK\") });\n     * })())\n     * .then((values) => {\n     *     console.log(values); // => [123, 0]\n     * });\n     * ```\n     */\n    Yaku.all = function all (iterable) {\n        var p1 = newEmptyYaku()\n        , res = []\n        , item\n        , countDown = 0\n        , iter\n        , len;\n\n        function onRejected (reason) {\n            settlePromise(p1, $rejected, reason);\n        }\n\n        if (iterable instanceof Array) {\n            len = iterable.length;\n            while (countDown < len) {\n                runAll(countDown, iterable[countDown++], p1, res, onRejected);\n            }\n        } else {\n            iter = genIterator(iterable);\n            while (!(item = iter.next()).done) {\n                runAll(countDown++, item.value, p1, res, onRejected);\n            }\n        }\n\n        onRejected._c = countDown;\n\n        if (!countDown) settlePromise(p1, $resolved, []);\n\n        return p1;\n    };\n\n    function runAll (i, el, p1, res, onRejected) {\n        Yaku.resolve(el).then(function (value) {\n            res[i] = value;\n            if (!--onRejected._c) settlePromise(p1, $resolved, res);\n        }, onRejected);\n    }\n\n    /**\n     * The ES6 Symbol object that Yaku should use, by default it will use the\n     * global one.\n     * @type {Object}\n     * @example\n     * ```js\n     * var core = require(\"core-js/library\");\n     * var Promise = require(\"yaku\");\n     * Promise.Symbol = core.Symbol;\n     * ```\n     */\n    Yaku.Symbol = root.Symbol || {};\n\n    /**\n     * Catch all possibly unhandled rejections. If you want to use specific\n     * format to display the error stack, overwrite it.\n     * If it is set, auto `console.error` unhandled rejection will be disabled.\n     * @param {Any} reason The rejection reason.\n     * @param {Yaku} p The promise that was rejected.\n     * @example\n     * ```js\n     * var Promise = require('yaku');\n     * Promise.onUnhandledRejection = (reason) => {\n     *     console.error(reason);\n     * };\n     *\n     * // The console will log an unhandled rejection error message.\n     * Promise.reject('my reason');\n     *\n     * // The below won't log the unhandled rejection error message.\n     * Promise.reject('v').catch(() => {});\n     * ```\n     */\n    Yaku.onUnhandledRejection = function (reason, p) {\n        var con = root.console;\n        if (con) {\n            var info = genStackInfo(reason, p);\n            con.error($unhandledRejection, info[0], info[1] || \"\");\n        }\n    };\n\n    /**\n     * It is used to enable the long stack trace.\n     * Once it is enabled, it can't be reverted.\n     * While it is very helpful in development and testing environments,\n     * it is not recommended to use it in production. It will slow down your\n     * application and waste your memory.\n     * @example\n     * ```js\n     * var Promise = require('yaku');\n     * Promise.enableLongStackTrace();\n     * ```\n     */\n    Yaku.enableLongStackTrace = function () {\n        isLongStackTrace = true;\n    };\n\n    /**\n     * Only Node has `process.nextTick` function. For browser there are\n     * so many ways to polyfill it. Yaku won't do it for you, instead you\n     * can choose what you prefer. For example, this project\n     * [setImmediate](https://github.com/YuzuJS/setImmediate).\n     * By default, Yaku will use `process.nextTick` on Node, `setTimeout` on browser.\n     * @type {Function}\n     * @example\n     * ```js\n     * var Promise = require('yaku');\n     * Promise.nextTick = fn => window.setImmediate(fn);\n     * ```\n     * @example\n     * You can even use sync resolution if you really know what you are doing.\n     * ```js\n     * var Promise = require('yaku');\n     * Promise.nextTick = fn => fn();\n     * ```\n     */\n    Yaku.nextTick = root.process ?\n        root.process.nextTick :\n        function (fn) { setTimeout(fn); };\n\n    // ********************** Private **********************\n\n    /**\n     * All static variable name will begin with `$`. Such as `$rejected`.\n     * @private\n     */\n\n    // ******************************* Utils ********************************\n\n    var $tryCatchFn\n    , $tryCatchThis\n    , $tryErr = { e: null }\n    , $noop = {};\n\n    function extendPrototype (src, target) {\n        for (var k in target) {\n            src.prototype[k] = target[k];\n        }\n        return src;\n    }\n\n    function isObject (obj) {\n        return typeof obj === \"object\";\n    }\n\n    function isFunction (obj) {\n        return typeof obj === \"function\";\n    }\n\n    /**\n     * Wrap a function into a try-catch.\n     * @private\n     * @return {Any | $tryErr}\n     */\n    function tryCatcher () {\n        try {\n            return $tryCatchFn.apply($tryCatchThis, arguments);\n        } catch (e) {\n            $tryErr.e = e;\n            return $tryErr;\n        }\n    }\n\n    /**\n     * Generate a try-catch wrapped function.\n     * @private\n     * @param  {Function} fn\n     * @return {Function}\n     */\n    function genTryCatcher (fn, self) {\n        $tryCatchFn = fn;\n        $tryCatchThis = self;\n        return tryCatcher;\n    }\n\n    /**\n     * Generate a scheduler.\n     * @private\n     * @param  {Integer}  initQueueSize\n     * @param  {Function} fn `(Yaku, Value) ->` The schedule handler.\n     * @return {Function} `(Yaku, Value) ->` The scheduler.\n     */\n    function genScheduler (initQueueSize, fn) {\n        /**\n         * All async promise will be scheduled in\n         * here, so that they can be execute on the next tick.\n         * @private\n         */\n        var fnQueue = Array(initQueueSize)\n        , fnQueueLen = 0;\n\n        /**\n         * Run all queued functions.\n         * @private\n         */\n        function flush () {\n            var i = 0;\n            while (i < fnQueueLen) {\n                fn(fnQueue[i], fnQueue[i + 1]);\n                fnQueue[i++] = $nil;\n                fnQueue[i++] = $nil;\n            }\n\n            fnQueueLen = 0;\n            if (fnQueue.length > initQueueSize) fnQueue.length = initQueueSize;\n        }\n\n        return function (v, arg) {\n            fnQueue[fnQueueLen++] = v;\n            fnQueue[fnQueueLen++] = arg;\n\n            if (fnQueueLen === 2) Yaku.nextTick(flush);\n        };\n    }\n\n    /**\n     * Generate a iterator\n     * @param  {Any} obj\n     * @return {Function}\n     */\n    function genIterator (obj) {\n        if (obj) {\n            var gen = obj[Yaku.Symbol.iterator];\n            if (isFunction(gen)) {\n                return gen.call(obj);\n            }\n\n            if (isFunction(obj.next)) {\n                return obj;\n            }\n        }\n        throw genTypeError(\"invalid_argument\");\n    }\n\n    /**\n     * Generate type error object.\n     * @private\n     * @param  {String} msg\n     * @return {TypeError}\n     */\n    function genTypeError (msg) {\n        return new TypeError(msg);\n    }\n\n    function genTraceInfo (noTitle) {\n        return ((new Error()).stack || \"\").replace(\n            \"Error\",\n            noTitle ? \"\" : $fromPrevious\n        );\n    }\n\n\n    // *************************** Promise Helpers ****************************\n\n    /**\n     * Resolve the value returned by onFulfilled or onRejected.\n     * @private\n     * @param {Yaku} p1\n     * @param {Yaku} p2\n     */\n    var scheduleHandler = genScheduler(999, function (p1, p2) {\n        var x, handler;\n\n        // 2.2.2\n        // 2.2.3\n        handler = p1._state ? p2._onFulfilled : p2._onRejected;\n\n        // 2.2.7.3\n        // 2.2.7.4\n        if (handler === $nil) {\n            settlePromise(p2, p1._state, p1._value);\n            return;\n        }\n\n        // 2.2.7.1\n        x = genTryCatcher(callHanler)(handler, p1._value);\n        if (x === $tryErr) {\n            // 2.2.7.2\n            settlePromise(p2, $rejected, x.e);\n            return;\n        }\n\n        settleWithX(p2, x);\n    });\n\n    var scheduleUnhandledRejection = genScheduler(9, function (p) {\n        if (!hashOnRejected(p)) {\n            var process = root.process\n            , onunhandledrejection = root.onunhandledrejection\n            , reason = p._value;\n\n            if (process && process.listeners($unhandledRejection).length)\n                process.emit($unhandledRejection, reason, p);\n            else if (onunhandledrejection)\n                onunhandledrejection({ promise: p, reason: reason });\n            else\n                Yaku.onUnhandledRejection(reason, p);\n        }\n    });\n\n    function isYaku (val) { return val && val._Yaku; }\n\n    /**\n     * Create an empty promise.\n     * @private\n     * @return {Yaku}\n     */\n    function newEmptyYaku () { return new Yaku($noop); }\n\n    /**\n     * It will produce a settlePromise function to user.\n     * Such as the resolve and reject in this `new Yaku (resolve, reject) ->`.\n     * @private\n     * @param  {Yaku} self\n     * @param  {Integer} state The value is one of `$pending`, `$resolved` or `$rejected`.\n     * @return {Function} `(value) -> undefined` A resolve or reject function.\n     */\n    function genSettler (self, state) { return function (value) {\n        if (isLongStackTrace)\n            self[$settlerTrace] = genTraceInfo(true);\n\n        if (state === $resolved)\n            settleWithX(self, value);\n        else\n            settlePromise(self, state, value);\n    }; }\n\n    /**\n     * Link the promise1 to the promise2.\n     * @private\n     * @param {Yaku} p1\n     * @param {Yaku} p2\n     * @param {Function} onFulfilled\n     * @param {Function} onRejected\n     */\n    function addHandler (p1, p2, onFulfilled, onRejected) {\n        // 2.2.1\n        if (isFunction(onFulfilled))\n            p2._onFulfilled = onFulfilled;\n        if (isFunction(onRejected))\n            p2._onRejected = onRejected;\n\n        if (isLongStackTrace) p2._pre = p1;\n        p1[p1._pCount++] = p2;\n\n        // 2.2.6\n        if (p1._state !== $pending)\n            scheduleHandler(p1, p2);\n\n        // 2.2.7\n        return p2;\n    }\n\n    // iterate tree\n    function hashOnRejected (node) {\n        // A node shouldn't be checked twice.\n        if (node._umark)\n            return true;\n        else\n            node._umark = true;\n\n        var i = 0\n        , len = node._pCount\n        , child;\n\n        while (i < len) {\n            child = node[i++];\n            if (child._onRejected || hashOnRejected(child)) return true;\n        }\n    }\n\n    function genStackInfo (reason, p) {\n        var stackInfo = []\n        , stackStr\n        , i;\n\n        function trim (str) { return str.replace(/^\\s+|\\s+$/g, \"\"); }\n\n        function push (trace) {\n            return stackInfo.push(trim(trace));\n        }\n\n        if (isLongStackTrace && p[$promiseTrace]) {\n            if (p[$settlerTrace])\n                push(p[$settlerTrace]);\n\n            // Hope you guys could understand how the back trace works.\n            // We only have to iterate through the tree from the bottom to root.\n            (function iter (node) {\n                if (node) {\n                    iter(node._next);\n                    push(node[$promiseTrace]);\n                    iter(node._pre);\n                }\n            })(p);\n        }\n\n        stackStr = \"\\n\" + stackInfo.join(\"\\n\");\n\n        function clean (stack, cleanPrev) {\n            if (cleanPrev && (i = stack.indexOf(\"\\n\" + $fromPrevious)) > 0)\n                stack = stack.slice(0, i);\n\n            return stack.replace(/^.+\\/node_modules\\/yaku\\/.+\\n?/mg, \"\");\n        }\n\n        return [(\n            reason ?\n                reason.stack ?\n                    clean(trim(reason.stack), true)\n                :\n                    reason\n            :\n                reason\n        ), clean(stackStr)];\n    }\n\n    function callHanler (handler, value) {\n        // 2.2.5\n        return handler(value);\n    }\n\n    /**\n     * Resolve or reject a promise.\n     * @private\n     * @param  {Yaku} p\n     * @param  {Integer} state\n     * @param  {Any} value\n     */\n    function settlePromise (p, state, value) {\n        var i = 0\n        , len = p._pCount\n        , p2\n        , stack;\n\n        // 2.1.2\n        // 2.1.3\n        if (p._state === $pending) {\n            // 2.1.1.1\n            p._state = state;\n            p._value = value;\n\n            if (state === $rejected) {\n                if (isLongStackTrace && value && value.stack) {\n                    stack = genStackInfo(value, p);\n                    value.stack = stack[0] + stack[1];\n                }\n\n                scheduleUnhandledRejection(p);\n            }\n\n            // 2.2.4\n            while (i < len) {\n                p2 = p[i++];\n\n                if (p2._state !== $pending) continue;\n\n                scheduleHandler(p, p2);\n            }\n        }\n\n        return p;\n    }\n\n    /**\n     * Resolve or reject promise with value x. The x can also be a thenable.\n     * @private\n     * @param {Yaku} p\n     * @param {Any | Thenable} x A normal value or a thenable.\n     */\n    function settleWithX (p, x) {\n        // 2.3.1\n        if (x === p && x) {\n            settlePromise(p, $rejected, genTypeError(\"promise_circular_chain\"));\n            return p;\n        }\n\n        // 2.3.2\n        // 2.3.3\n        if (x != null && (isFunction(x) || isObject(x))) {\n            // 2.3.2.1\n            var xthen = genTryCatcher(getThen)(x);\n\n            if (xthen === $tryErr) {\n                // 2.3.3.2\n                settlePromise(p, $rejected, xthen.e);\n                return p;\n            }\n\n            if (isFunction(xthen)) {\n                if (isLongStackTrace && isYaku(x))\n                    p._next = x;\n\n                settleXthen(p, x, xthen);\n            }\n            else\n                // 2.3.3.4\n                settlePromise(p, $resolved, x);\n        } else\n            // 2.3.4\n            settlePromise(p, $resolved, x);\n\n        return p;\n    }\n\n    /**\n     * Try to get a promise's then method.\n     * @private\n     * @param  {Thenable} x\n     * @return {Function}\n     */\n    function getThen (x) { return x.then; }\n\n    /**\n     * Resolve then with its promise.\n     * @private\n     * @param  {Yaku} p\n     * @param  {Thenable} x\n     * @param  {Function} xthen\n     */\n    function settleXthen (p, x, xthen) {\n        // 2.3.3.3\n        var err = genTryCatcher(xthen, x)(function (y) {\n            // 2.3.3.3.3\n            if (x) {\n                x = null;\n\n                // 2.3.3.3.1\n                settleWithX(p, y);\n            }\n        }, function (r) {\n            // 2.3.3.3.3\n            if (x) {\n                x = null;\n\n                // 2.3.3.3.2\n                settlePromise(p, $rejected, r);\n            }\n        });\n\n        // 2.3.3.3.4.1\n        if (err === $tryErr && x) {\n            // 2.3.3.3.4.2\n            settlePromise(p, $rejected, err.e);\n            x = null;\n        }\n    }\n\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/yaku/lib/yaku.js\n ** module id = 2\n ** module chunks = 0\n **/","import Signal from './signal'\n\nexport default class FieldLocale {\n\n  constructor (channel, {id, locale, value}) {\n    this.id = id\n    this.locale = locale\n\n    this._value = value\n    this._valueSignal = new Signal()\n    this._channel = channel\n\n    channel.addHandler('valueChanged', (id, locale, value) => {\n      if (id === this.id && locale === this.locale) {\n        this._value = value\n        this._valueSignal.dispatch(value)\n      }\n    })\n  }\n\n  getValue () {\n    return this._value\n  }\n\n  setValue (value) {\n    this._value = value\n    return this._channel.call('setValue', this.id, this.locale, value)\n  }\n\n  onValueChanged (handler) {\n    return this._valueSignal.attach(handler)\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** field-locale.js\n **/","export default class Signal {\n  constructor () {\n    this._id = 0\n    this._listeners = {}\n  }\n\n  dispatch (...args) {\n    for (let key in this._listeners) {\n      this._listeners[key](...args)\n    }\n  }\n\n  attach (listener) {\n    var id = this._id++\n    this._listeners[id] = listener\n    var self = this\n    return function removeListener () {\n      delete self._listeners[id]\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** signal.js\n **/","export default function createWindow (channel) {\n  let observer = new MutationObserver(() => updateHeight())\n  let oldHeight = null\n\n  return {startAutoResizer, stopAutoResizer, updateHeight}\n\n  function startAutoResizer () {\n    updateHeight()\n    observer.observe(window.document.body, {\n      attributes: true, childList: true,\n      subtree: true, characterData: true\n    })\n  }\n\n  function stopAutoResizer () {\n    observer.disconnect()\n  }\n\n  function updateHeight (height) {\n    if (height == null) {\n      height = window.document.body.scrollHeight\n    }\n\n    if (height !== oldHeight) {\n      channel.send('setHeight', height)\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** window.js\n **/","import Signal from './signal'\nimport Field from './field'\n\nexport default\nfunction createEntry (channel, entryData, fieldInfo, defaultLocale) {\n  let sys = entryData.sys\n  let sysChanged = new Signal()\n\n  channel.addHandler('sysChanged', (_sys) => {\n    sys = _sys\n    sysChanged.dispatch(sys)\n  })\n\n  let entry = {\n    fields: {},\n    getSys () {\n      return sys\n    },\n    onSysChanged (handler) {\n      return sysChanged.attach(handler)\n    }\n  }\n\n  fieldInfo.forEach((info) => {\n    entry.fields[info.id] = new Field(channel, info, defaultLocale)\n  })\n\n  return entry\n}\n\n\n\n/** WEBPACK FOOTER **\n ** entry.js\n **/","import Signal from './signal'\n\nexport default class Field {\n\n  constructor (channel, info, defaultLocale) {\n    this.id = info.id\n    this.locales = info.locales\n    this._defaultLocale = defaultLocale\n    this._valueSignals = {}\n    this._values = info.values\n    this._channel = channel\n\n    this.locales.forEach((locale) => {\n      this._valueSignals[locale] = new Signal()\n    })\n\n    channel.addHandler('valueChanged', (id, locale, value) => {\n      if (id !== this.id) {\n        return\n      }\n\n      var locales = locale ? [locale] : this.locales\n      locales.forEach((locale) => {\n        this._values[locale] = value\n        this._valueSignals[locale].dispatch(value)\n      })\n    })\n  }\n\n  getValue (locale) {\n    locale = locale || this._defaultLocale\n    return this._values[locale]\n  }\n\n  setValue (value, locale) {\n    locale = locale || this._defaultLocale\n    this._values[locale] = value\n    return this._channel.call('setValue', this.id, locale, value)\n  }\n\n  removeValue (locale) {\n    this.setValue(undefined, locale)\n  }\n\n  onValueChanged (locale, handler) {\n    if (!handler) {\n      handler = locale\n      locale = this._defaultLocale\n    }\n    if (!(locale in this._valueSignals)) {\n      throw new Error(`Unknown locale \"${locale}\" for field \"${this.id}\"`)\n    }\n    return this._valueSignals[locale].attach(handler)\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** field.js\n **/","const spaceMethods = [\n  'getContentType',\n  'getEntry',\n  'getAsset',\n\n  'getContentTypes',\n  'getEntries',\n  'getAssets',\n\n  'createContentType',\n  'createEntry',\n  'createAsset',\n\n  'updateContentType',\n  'updateEntry',\n  'updateAsset',\n\n  'deleteContentType',\n  'deleteEntry',\n  'deleteAsset',\n\n  'publishEntry',\n  'publishAsset',\n  'unpublishEntry',\n  'unpublishAsset',\n\n  'archiveEntry',\n  'archiveAsset',\n  'unarchiveEntry',\n  'unarchiveAsset',\n\n  'processAsset'\n]\n\nexport default function createSpace (channel) {\n  var space = {}\n\n  spaceMethods.forEach((methodName) => {\n    space[methodName] = function (...args) {\n      return channel.call('callSpaceMethod', methodName, args)\n    }\n  })\n\n  return space\n}\n\n\n\n/** WEBPACK FOOTER **\n ** space.js\n **/"],"sourceRoot":""}